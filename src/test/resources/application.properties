server.port=8082
##In test environment, we dont need a database
#spring.liquibase.enabled=true
#spring.jpa.properties.hibernate.ejb.interceptor=com.sysco.rps.config.JPAInterceptor
#https://github.com/zonkyio/embedded-database-spring-test/issues/15
#
spring.main.allow-bean-definition-overriding=true
#Supressing a warning
#spring.jpa.open-in-view=false

#spring actuator parameters
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/ref-price/v1
management.endpoints.web.path-mapping.health=health

#Auth parameters
#resolved.introspect.url=${introspect.url}
#resolved.db.jdbcUrl=${db.jdbcUrl}
#resolved.db.username=${db.username}
#resolved.db.password=${db.password}
#spring.datasource.initialization-mode=always
#spring.jpa.hibernate.ddl-auto=none
#spring.flyway.enabled=true

#database connection parameters
pricing.db.protocol=h2:tcp
pricing.db.host=localhost
pricing.db.username=root
pricing.db.password=
pricing.db.max.life.lower.limit=30000
pricing.db.max.life.upper.limit=210000
pricing.db.max.connection.create.time=5000
pricing.db.max.connection.acquire.time=6000
pricing.db.max.pool.size=20
pricing.db.initial.pool.size=10
pricing.db.connection.validation.query=SELECT 1
pricing.db.h2.file.path=/tmp/REF_PRICE_022

# business units
#active.business.units=001,002,003,004,005,006,007,008,009,010,051
#active.business.units=020,021,022,023,024,025,026,027,028,029
active.business.units=020

#queries
query.get.price=\
SELECT paOuter.supc, \
       paOuter.price_zone, \
       paOuter.price, \
       paOuter.effective_date, \
       paOuter.exported_date, \
       paOuter.catch_weight_indicator \
FROM   PRICE paOuter \
       INNER JOIN (SELECT Max(paInner.effective_date) max_eff_date, \
                          paInner.supc, \
                          paInner.price_zone \
                   FROM   (SELECT e.supc, \
                                  e.price_zone, \
                                  e.customer_id \
                           FROM   price_zone_01 e  \
                           WHERE  e.customer_id =:customerId \
                                  AND supc IN (:supcs)) pz \
                          INNER JOIN PRICE paInner  \
                                  ON pz.supc = paInner.supc \
                                     AND pz.price_zone = paInner.price_zone \
                                     AND paInner.effective_date <=:effectiveDate \
                   GROUP  BY paInner.supc, \
                             paInner.price_zone) c \
               ON c.supc = paOuter.supc \
                  AND c.price_zone = paOuter.price_zone \
                  AND c.max_eff_date = paOuter.effective_date

#should be an int value. This will be superseded by the requestedSupcsPerQuery query param
supcs.per.query=5
