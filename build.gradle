plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'org.sonarqube' version '2.7'
    id 'jacoco'
    id "net.linguica.maven-settings" version "0.5"
}

group = 'com.sysco'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    mavenCentral()
    maven {
        name = 'snapshots'
        url = 'https://syscobt.jfrog.io/artifactory/mvn'
//        authentication {
//            basic(BasicAuthentication)
//        }

//        credentials {
//            username = System.getenv('JFROG_USER')
//            password = System.getenv('JFROG_USER')
//        }
        credentials(HttpHeaderCredentials) {
            name = "X-JFrog-Art-Api"
            value = System.getenv('JFROG_API_KEY')
        }
        authentication {
            header(HttpHeaderAuthentication)
        }
    }
}

ext.getCurrentBranchName = {
    new ByteArrayOutputStream().withStream { os ->
        exec {
            executable = "git"
            args = ["rev-parse", "--abbrev-ref", "HEAD"]
            standardOutput = os
        }
        return os.toString()
    }
}

ext.getSonarProperties = {
    def props = new Properties()
    file("sonar-project.properties").withInputStream { props.load(it) }
    return props
}

sonarqube {
    def props = getSonarProperties()
    properties {
        props.each { prop ->
            property "${prop.key}", "${prop.value}"
        }
        property "sonar.host.url", "https://cloudpricing-sonar-dev.prcp-np.us-east-1.aws.sysco.net/"
        property "sonar.login", "2bd4c258b4109a08739b27b76f512af1c1dc17fe"
		property "sonar.scm.forceReloadAll", "true"
		property 'sonar.core.codeCoveragePlugin', 'jacoco'
        property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/reports/jacoco.xml"
        if (!(getCurrentBranchName().equals("develop") || getCurrentBranchName().equals("master") || project.hasProperty('pullrequest'))) {
            property "sonar.branch.name", getCurrentBranchName()
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.destination file("${buildDir}/reports/coverage")
        xml.destination file("${buildDir}/reports/jacoco.xml")
    }
}

//Do not use compile or complieTest instead use implementation or testImplementation. https://docs.gradle.org/current/userguide/java_plugin.html
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    runtimeOnly 'dev.miku:r2dbc-mysql'
    runtimeOnly 'mysql:mysql-connector-java'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'com.h2database:h2'
    // https://mvnrepository.com/artifact/io.r2dbc/r2dbc-h2
    implementation group: 'io.r2dbc', name: 'r2dbc-h2', version: '0.8.4.RELEASE'

    // https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
    implementation(group: 'io.springfox', name: 'springfox-swagger2', version: '2.10.5') {
        exclude module: 'swagger-annotations'
        exclude module: 'swagger-models'
        exclude group: 'com.google.guava', module: 'guava'
    }

    // https://mvnrepository.com/artifact/io.swagger/swagger-annotations
    implementation group: 'io.swagger', name: 'swagger-annotations', version: '1.6.1'

    // https://mvnrepository.com/artifact/io.swagger/swagger-models
    implementation group: 'io.swagger', name: 'swagger-models', version: '1.6.1'

    // https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.10.5'

    // https://mvnrepository.com/artifact/io.springfox/springfox-spring-webflux
    implementation group: 'io.springfox', name: 'springfox-spring-webflux', version: '2.10.5'


    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'

    // https://mvnrepository.com/artifact/commons-validator/commons-validator
    implementation group: 'commons-validator', name: 'commons-validator', version: '1.6'

    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-aws-autoconfigure
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-aws-autoconfigure', version: '2.1.4.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws-parameter-store-config', version: '2.1.4.RELEASE'

    // https://mvnrepository.com/artifact/com.google.guava/guava/29.0-jre
    implementation group: 'com.google.guava', name: 'guava', version: '29.0-jre'

    // https://mvnrepository.com/artifact/org.aspectj/aspectjweaver
    implementation group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.5'

    testImplementation group: 'com.sysco.pricing', name: 'junit-qcenter-integrator', version: '1.0-SNAPSHOT'

}

test {
    systemProperty 'spring.profiles.active', 'test'
    finalizedBy jacocoTestReport
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams true
    }

}

project.tasks["sonarqube"].dependsOn "compileJava"
project.tasks["sonarqube"].dependsOn "jacocoTestReport"
